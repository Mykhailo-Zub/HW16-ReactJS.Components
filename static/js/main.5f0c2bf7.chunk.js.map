{"version":3,"sources":["img/user.svg","img/male.svg","img/female.svg","img/unknown.svg","components/contact.js","components/Contacts.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","contact","props","className","src","avatarImg","alt","firstName","lastName","phone","gender","contacts","male","female","notSpecified","Contacts","state","search","handleSearchChange","e","setState","target","value","filter","el","toLowerCase","includes","toString","addGenderImg","maleImg","femaleImg","unknownImg","handleMaleChange","name","checked","handleFemaleChange","handleNotSpecifiedChange","type","id","placeholder","this","onChange","htmlFor","map","key","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5f0c2bf7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.e7875f01.svg\";","module.exports = __webpack_public_path__ + \"static/media/male.07582995.svg\";","module.exports = __webpack_public_path__ + \"static/media/female.5c87994c.svg\";","module.exports = __webpack_public_path__ + \"static/media/unknown.2508df20.svg\";","import React from \"react\";\r\n\r\nimport avatarImg from \"../img/user.svg\";\r\n\r\nconst contact = (props) => (\r\n    <div className=\"contact\">\r\n        <img className=\"avatar\" src={avatarImg} alt=\"Avatar\" />\r\n        <div className=\"main-info\">\r\n            <div className=\"first-name\">{props.firstName}</div>\r\n            <div className=\"last-name\">{props.lastName}</div>\r\n            <div className=\"phone\">{props.phone}</div>\r\n        </div>\r\n        <div className=\"gender\">\r\n            <img src={props.gender} alt=\"Gender icon\" />\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./contact\";\r\nimport maleImg from \"../img/male.svg\";\r\nimport femaleImg from \"../img/female.svg\";\r\nimport unknownImg from \"../img/unknown.svg\";\r\n\r\nconst contacts = [\r\n    {\r\n        firstName: \"Барней\",\r\n        lastName: \"Стинсовський\",\r\n        phone: \"+380956319521\",\r\n        gender: \"male\",\r\n        male: true,\r\n        female: false,\r\n        notSpecified: false,\r\n    },\r\n    {\r\n        firstName: \"Робін\",\r\n        lastName: \"Щербатська\",\r\n        phone: \"+380931460123\",\r\n        gender: \"female\",\r\n        male: false,\r\n        female: true,\r\n        notSpecified: false,\r\n    },\r\n    {\r\n        firstName: \"Анонімний\",\r\n        lastName: \"Анонімус\",\r\n        phone: \"+380666666666\",\r\n        male: false,\r\n        female: false,\r\n        notSpecified: true,\r\n    },\r\n    {\r\n        firstName: \"Лілія\",\r\n        lastName: \"Олдровна\",\r\n        phone: \"+380504691254\",\r\n        gender: \"female\",\r\n        male: false,\r\n        female: true,\r\n        notSpecified: false,\r\n    },\r\n    {\r\n        firstName: \"Маршен\",\r\n        lastName: \"Еріксонян\",\r\n        phone: \"+380739432123\",\r\n        gender: \"male\",\r\n        male: true,\r\n        female: false,\r\n        notSpecified: false,\r\n    },\r\n    {\r\n        firstName: \"Теодор\",\r\n        lastName: \"Мотсбес\",\r\n        phone: \"+380956319526\",\r\n        gender: \"male\",\r\n        male: true,\r\n        female: false,\r\n        notSpecified: false,\r\n    },\r\n];\r\n\r\nexport default class Contacts extends Component {\r\n    state = {\r\n        contacts: [...contacts],\r\n        search: \"\",\r\n        male: true,\r\n        female: true,\r\n        notSpecified: true,\r\n    };\r\n\r\n    handleSearchChange = (e) => {\r\n        this.setState({\r\n            search: e.target.value,\r\n            contacts: contacts.filter((el) => {\r\n                return (\r\n                    el.firstName\r\n                        .toLowerCase()\r\n                        .includes(e.target.value.toLowerCase()) ||\r\n                    el.lastName.includes(e.target.value.toLowerCase()) ||\r\n                    el.phone.toString().includes(e.target.value)\r\n                );\r\n            }),\r\n        });\r\n    };\r\n\r\n    addGenderImg = (contact) => {\r\n        if (contact.gender === \"male\") {\r\n            return maleImg;\r\n        } else if (contact.gender === \"female\") {\r\n            return femaleImg;\r\n        } else {\r\n            return unknownImg;\r\n        }\r\n    };\r\n\r\n    handleMaleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.checked,\r\n            contacts: contacts.filter((el) => {\r\n                return (\r\n                    el.male.toString().includes(`${!this.state.male}`) ||\r\n                    el.female.toString().includes(`${this.state.female}`) ||\r\n                    el.notSpecified\r\n                        .toString()\r\n                        .includes(`${this.state.notSpecified}`)\r\n                );\r\n            }),\r\n        });\r\n    };\r\n\r\n    handleFemaleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.checked,\r\n            contacts: contacts.filter((el) => {\r\n                return (\r\n                    el.male.toString().includes(`${this.state.male}`) ||\r\n                    el.female.toString().includes(`${!this.state.female}`) ||\r\n                    el.notSpecified\r\n                        .toString()\r\n                        .includes(`${this.state.notSpecified}`)\r\n                );\r\n            }),\r\n        });\r\n    };\r\n\r\n    handleNotSpecifiedChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.checked,\r\n            contacts: contacts.filter((el) => {\r\n                return (\r\n                    el.male.toString().includes(`${this.state.male}`) ||\r\n                    el.female.toString().includes(`${this.state.female}`) ||\r\n                    el.notSpecified\r\n                        .toString()\r\n                        .includes(`${!this.state.notSpecified}`)\r\n                );\r\n            }),\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"contacts-wrapper\">\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"search\"\r\n                    placeholder=\"Search\"\r\n                    value={this.state.search}\r\n                    onChange={this.handleSearchChange}\r\n                />\r\n                <div className=\"checkboxes\">\r\n                    <label htmlFor=\"male\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"male\"\r\n                            id=\"male\"\r\n                            checked={this.state.male}\r\n                            onChange={this.handleMaleChange}\r\n                        />\r\n                        Male\r\n                    </label>\r\n                    <label htmlFor=\"female\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"female\"\r\n                            id=\"female\"\r\n                            checked={this.state.female}\r\n                            onChange={this.handleFemaleChange}\r\n                        />\r\n                        Female\r\n                    </label>\r\n                    <label htmlFor=\"notSpecefied\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"notSpecified\"\r\n                            id=\"notSpecefied\"\r\n                            checked={this.state.notSpecified}\r\n                            onChange={this.handleNotSpecifiedChange}\r\n                        />\r\n                        Not specified\r\n                    </label>\r\n                </div>\r\n                {this.state.contacts.map((contact) => {\r\n                    return (\r\n                        <Contact\r\n                            firstName={contact.firstName}\r\n                            lastName={contact.lastName}\r\n                            phone={contact.phone}\r\n                            gender={this.addGenderImg(contact)}\r\n                            key={contact.phone}\r\n                        />\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\nimport Contacts from \"./components/Contacts\";\n\nfunction App() {\n    return (\n        <div>\n            <Contacts />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}